{"version":3,"sources":["components/Header/Header.tsx","reducer.ts","components/About/style.ts","components/About/About.tsx","components/Score/style.ts","components/Score/Score.tsx","components/Settings/style.ts","components/Settings/Settings.tsx","components/GameMenu/style.ts","components/GameMenu/GameMenu.tsx","components/GameStats/GameStats.tsx","components/FieldCell/FieldCell.tsx","components/GameField/GameField.tsx","helpers/getCopyOfArray.ts","helpers/checkGameIsWin.ts","helpers/updateScoreValues.ts","utils/swipeLeft.ts","utils/swipeRight.ts","utils/swipeUp.ts","utils/swipeDown.ts","constants.ts","helpers/isIdenticalArrays.ts","components/Win/style.ts","components/Win/Win.tsx","components/Lose/style.ts","components/Lose/Lose.tsx","assets/sounds/bg.mp3","assets/sounds/bump.mp3","assets/sounds/win.mp3","assets/sounds/lose.mp3","assets/sounds/open.ogg","helpers/getRandomDirection.ts","components/Game/Game.tsx","helpers/getRandomFieldValue.ts","helpers/getInitialData.ts","components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","SET_FIELD_SIZE","SET_GAME_DATA","SET_INIT_TIME","SET_NOW_TIME","SET_PAUSE","SET_PAUSE_DELAY","SET_START_PAUSE_DELAY","SET_LANGUAGE","SET_GAME_OVER","SET_GAME_WIN","SET_GAME_START","SET_GAME_CONTINUE","SET_ABOUT_OPEN","SET_SETTINGS_OPEN","SET_SCORE_OPEN","SET_RESET_GAME","SET_MAX_VALUE","SET_SCORE","SET_GLOBAL_SCORE","SET_SCORE_DATA","SET_FETCH_DATA","SET_FULLSCREEN","SET_SOUND","SET_SOUND_VALUE","SET_MUSIC","SET_MUSIC_VALUE","initialState","fieldSize","gameData","initTime","Date","nowTime","getTime","isPause","pauseDelay","startPauseDelay","languageIsEn","gameIsOver","gameIsWin","gameIsStart","gameIsContinue","aboutIsOpen","scoreIsOpen","settingsIsOpen","gameIsReset","maxValue","scoreValue","globalScoreValue","scoreData","fullScreenIsActive","isSoundOn","soundValue","isMusicOn","musicValue","setGameData","newData","type","setNowTime","setPause","setPauseDelay","setGameOver","setGameWin","setGameContinue","setScoreOpen","setSettingsOpen","setResetGame","setMaxValue","setScore","setScoreData","scoreForLocal","setSound","setMusic","reducer","state","action","value","time","getMinutes","getSeconds","newScoreData","push","sort","a","b","length","pop","localStorage","setItem","JSON","stringify","fetchData","useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundImage","boxShadow","shadows","padding","spacing","maxWidth","borderRadius","color","outline","gridElement","margin","hotkey","border","width","height","marginRight","button","minWidth","closeButton","About","dispatch","playSound","modalSound","classes","handleAboutToggle","setAboutOpen","Button","variant","onClick","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Typography","paragraph","component","Grid","container","item","xs","justify","KeyboardArrowDown","KeyboardArrowUp","KeyboardArrowRight","KeyboardArrowLeft","DialogActions","table","Score","handleScoreToggle","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","i","flexDirection","form","formLabel","fullscreen","fullscreenButton","background","slider","Settings","resetGame","toggleFullScreen","bgSoundOn","stop","handleSettingsToggle","FormControl","FormLabel","RadioGroup","name","onChange","target","FormControlLabel","control","Radio","label","FullscreenExit","Fullscreen","VolumeDown","Slider","event","newValue","VolumeUp","MusicOff","MusicNote","GameMenu","onSetPause","initField","GameStats","FieldCell","GameField","cellsValue","fieldCells","cellRow","rowI","cell","cellI","getCopyOfArray","oldArray","parse","checkGameIsWin","winSound","updateScoreValues","setGlobalScore","swipeLeft","copyData","prevIndex","currentIndex","swipeRight","swipeUp","swipeDown","KEYS","isIdenticalArrays","array1","array2","fontSize","Win","onResetGame","marginTop","Lose","directions","Game","useReducer","useSound","bgSoundSrc","volume","bumpSoundSrc","bumpSound","winSoundSrc","loseSoundSrc","loseSound","openModalSoundSrc","addRandomValue","console","log","_","sample","isAdded","getRandomRow","random","getRandomColumn","checkGameIsOver","playEventSound","initialData","Array","fill","playBgSound","removeItem","useEffect","setFetchData","window","addEventListener","setLocalStorage","removeEventListener","updateTimeInterval","setInterval","setTimer","clearInterval","handleKeydown","e","code","moveLeft","moveRight","moveUp","moveDown","pause","flat","every","j","diffTime","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","setTimeout","soundPlay","Footer","href","rel","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b6b126b.chunk.js","sourcesContent":["import React from 'react'\nimport './style.scss'\n\nconst Header = (): JSX.Element => {\n  return (\n    <div className=\"header-wrapper\">\n      <div className=\"header__logo\">2048</div>\n      <div className=\"header__author\">by onc157</div>\n    </div>\n  )\n}\n\nexport default Header\n","import { GameDataType, ScoreDataType, StateType } from './types/types'\n\nconst SET_FIELD_SIZE = 'SET_FIELD_SIZE'\nconst SET_GAME_DATA = 'SET_GAME_DATA'\nconst SET_INIT_TIME = 'SET_INIT_TIME'\nconst SET_NOW_TIME = 'SET_NOW_TIME'\nconst SET_PAUSE = 'SET_PAUSE'\nconst SET_PAUSE_DELAY = 'SET_PAUSE_DELAY'\nconst SET_START_PAUSE_DELAY = 'SET_START_PAUSE_DELAY'\nconst SET_LANGUAGE = 'SET_LANGUAGE'\nconst SET_GAME_OVER = 'SET_GAME_OVER'\nconst SET_GAME_WIN = 'SET_GAME_WIN'\nconst SET_GAME_START = 'SET_GAME_START'\nconst SET_GAME_CONTINUE = 'SET_GAME_CONTINUE'\nconst SET_ABOUT_OPEN = 'SET_ABOUT_OPEN'\nconst SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nconst SET_SCORE_OPEN = 'SET_SCORE_OPEN'\nconst SET_RESET_GAME = 'SET_RESET_GAME'\nconst SET_MAX_VALUE = 'SET_MAX_VALUE'\nconst SET_SCORE = 'SET_SCORE'\nconst SET_GLOBAL_SCORE = 'SET_GLOBAL_SCORE'\nconst SET_SCORE_DATA = 'SET_FETCH_SCORE'\nconst SET_FETCH_DATA = 'SET_FETCH_DATA'\nconst SET_FULLSCREEN = 'SET_FULLSCREEN'\nconst SET_SOUND = 'SET_SOUND'\nconst SET_SOUND_VALUE = 'SET_SOUND_VALUE'\nconst SET_MUSIC = 'SET_MUSIC'\nconst SET_MUSIC_VALUE = 'SET_MUSIC_VALUE'\n\nexport const initialState: StateType = {\n  fieldSize: 4,\n  gameData: [],\n  initTime: new Date(),\n  nowTime: new Date(new Date().getTime() - new Date().getTime()),\n  isPause: false,\n  pauseDelay: 0,\n  startPauseDelay: null,\n  languageIsEn: true,\n  gameIsOver: false,\n  gameIsWin: false,\n  gameIsStart: false,\n  gameIsContinue: false,\n  aboutIsOpen: false,\n  scoreIsOpen: false,\n  settingsIsOpen: false,\n  gameIsReset: false,\n  maxValue: 0,\n  scoreValue: 0,\n  globalScoreValue: 0,\n  scoreData: [],\n  fullScreenIsActive: false,\n  isSoundOn: true,\n  soundValue: 0.7,\n  isMusicOn: true,\n  musicValue: 0.2,\n}\n\nconst reducer = (state: StateType, action: any): StateType => {\n  switch (action.type) {\n    case SET_FIELD_SIZE:\n      return {\n        ...state,\n        fieldSize: action.fieldSize,\n      }\n    case SET_GAME_DATA:\n      return {\n        ...state,\n        gameData: action.newData,\n      }\n    case SET_INIT_TIME:\n      return {\n        ...state,\n        initTime: action.initTime,\n      }\n    case SET_NOW_TIME:\n      return {\n        ...state,\n        nowTime: action.nowTime,\n      }\n    case SET_PAUSE:\n      return {\n        ...state,\n        isPause: action.isPause,\n      }\n    case SET_PAUSE_DELAY:\n      return {\n        ...state,\n        pauseDelay: action.pauseDelay,\n      }\n    case SET_START_PAUSE_DELAY:\n      return {\n        ...state,\n        startPauseDelay: action.startPauseDelay,\n      }\n    case SET_LANGUAGE:\n      return {\n        ...state,\n        languageIsEn: action.languageIsEn,\n      }\n    case SET_GAME_OVER:\n      return {\n        ...state,\n        gameIsOver: action.gameIsOver,\n      }\n    case SET_GAME_WIN:\n      return {\n        ...state,\n        gameIsWin: action.gameIsWin,\n      }\n    case SET_GAME_START:\n      return {\n        ...state,\n        gameIsStart: action.gameIsStart,\n      }\n    case SET_GAME_CONTINUE:\n      return {\n        ...state,\n        gameIsContinue: action.gameIsContinue,\n      }\n    case SET_ABOUT_OPEN:\n      return {\n        ...state,\n        aboutIsOpen: action.aboutIsOpen,\n      }\n    case SET_SCORE_OPEN:\n      return {\n        ...state,\n        scoreIsOpen: action.scoreIsOpen,\n      }\n    case SET_SETTINGS_OPEN:\n      return {\n        ...state,\n        settingsIsOpen: action.settingsIsOpen,\n      }\n    case SET_RESET_GAME:\n      return {\n        ...state,\n        gameIsReset: action.gameIsReset,\n      }\n    case SET_MAX_VALUE:\n      return {\n        ...state,\n        maxValue: action.maxValue,\n      }\n    case SET_SCORE:\n      if (action.scoreValue === 0) {\n        return {\n          ...state,\n          scoreValue: 0,\n        }\n      } else {\n        return {\n          ...state,\n          scoreValue: state.scoreValue + action.scoreValue,\n        }\n      }\n    case SET_GLOBAL_SCORE:\n      if (state.scoreValue >= state.globalScoreValue) {\n        return {\n          ...state,\n          globalScoreValue: state.scoreValue,\n        }\n      }\n      return state\n    case SET_SCORE_DATA:\n      // eslint-disable-next-line no-case-declarations\n      const value = action.scoreForLocal\n      // eslint-disable-next-line no-case-declarations\n      const time = `${state.nowTime.getMinutes()} : ${state.nowTime.getSeconds()}`\n      // eslint-disable-next-line no-case-declarations\n      const newScoreData = [...state.scoreData]\n      newScoreData.push({ scoreValue: value, time: time })\n      newScoreData.sort((a: ScoreDataType, b: ScoreDataType) => b.scoreValue - a.scoreValue)\n      if (newScoreData.length > 10) {\n        newScoreData.pop()\n      }\n\n      localStorage.setItem('scoreData', JSON.stringify(newScoreData))\n      return {\n        ...state,\n        scoreData: newScoreData,\n      }\n    case SET_FETCH_DATA:\n      return {\n        ...state,\n        ...action.fetchData,\n        initTime: new Date(action.fetchData.initTime),\n        nowTime: new Date(action.fetchData.nowTime),\n      }\n    case SET_FULLSCREEN:\n      return {\n        ...state,\n        fullScreenIsActive: action.fullScreenIsActive,\n      }\n    case SET_SOUND: {\n      return {\n        ...state,\n        isSoundOn: action.isSoundOn,\n      }\n    }\n    case SET_MUSIC: {\n      return {\n        ...state,\n        isMusicOn: action.isMusicOn,\n      }\n    }\n    case SET_SOUND_VALUE: {\n      return {\n        ...state,\n        soundValue: action.soundValue / 100,\n      }\n    }\n    case SET_MUSIC_VALUE: {\n      return {\n        ...state,\n        musicValue: action.musicValue / 100,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const setFieldSize = (fieldSize: number) => ({ type: SET_FIELD_SIZE, fieldSize })\nexport const setGameData = (newData: GameDataType) => ({ type: SET_GAME_DATA, newData })\nexport const setInitTime = (initTime: Date) => ({ type: SET_INIT_TIME, initTime })\nexport const setNowTime = (nowTime: Date) => ({ type: SET_NOW_TIME, nowTime })\nexport const setPause = (isPause: boolean) => ({ type: SET_PAUSE, isPause })\nexport const setPauseDelay = (pauseDelay: number) => ({ type: SET_PAUSE_DELAY, pauseDelay })\nexport const setStartPauseDelay = (startPauseDelay: Date | null) => ({ type: SET_START_PAUSE_DELAY, startPauseDelay })\nexport const setLanguage = (languageIsEn: boolean) => ({ type: SET_LANGUAGE, languageIsEn })\nexport const setGameOver = (gameIsOver: boolean) => ({ type: SET_GAME_OVER, gameIsOver })\nexport const setGameWin = (gameIsWin: boolean) => ({ type: SET_GAME_WIN, gameIsWin })\nexport const setGameContinue = (gameIsContinue: boolean) => ({ type: SET_GAME_CONTINUE, gameIsContinue })\nexport const setStartGame = (gameIsStart: boolean) => ({ type: SET_GAME_START, gameIsStart })\nexport const setAboutOpen = (aboutIsOpen: boolean) => ({ type: SET_ABOUT_OPEN, aboutIsOpen })\nexport const setScoreOpen = (scoreIsOpen: boolean) => ({ type: SET_SCORE_OPEN, scoreIsOpen })\nexport const setSettingsOpen = (settingsIsOpen: boolean) => ({ type: SET_SETTINGS_OPEN, settingsIsOpen })\nexport const setResetGame = (gameIsReset: boolean) => ({ type: SET_RESET_GAME, gameIsReset })\nexport const setMaxValue = (maxValue: number) => ({ type: SET_MAX_VALUE, maxValue })\nexport const setScore = (scoreValue: number) => ({ type: SET_SCORE, scoreValue })\nexport const setGlobalScore = (globalScoreValue: number) => ({ type: SET_GLOBAL_SCORE, globalScoreValue })\nexport const setScoreData = (scoreForLocal: number) => ({ type: SET_SCORE_DATA, scoreForLocal })\nexport const setFetchData = (fetchData: StateType) => ({ type: SET_FETCH_DATA, fetchData })\nexport const setFullScreen = (fullScreenIsActive: boolean) => ({ type: SET_FULLSCREEN, fullScreenIsActive })\nexport const setSound = (isSoundOn: boolean) => ({ type: SET_SOUND, isSoundOn })\nexport const setSoundValue = (soundValue: number) => ({ type: SET_SOUND_VALUE, soundValue })\nexport const setMusic = (isMusicOn: boolean) => ({ type: SET_MUSIC, isMusicOn })\nexport const setMusicValue = (musicValue: number) => ({ type: SET_MUSIC_VALUE, musicValue })\n\nexport default reducer\n","import { createStyles, makeStyles, Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundImage: 'linear-gradient(-20deg, #2b5876 0%, #4e4376 100%)',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      maxWidth: '600px',\n      borderRadius: '15px',\n      color: '#FFF',\n      outline: 'none',\n    },\n    gridElement: {\n      margin: '10px 0',\n    },\n    hotkey: {\n      border: '1px solid grey',\n      borderRadius: '10px',\n      width: '35px',\n      height: '35px',\n      boxShadow: '2px 2px #FFF',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: '10px',\n    },\n    button: {\n      borderRadius: '15px',\n      padding: '5px 10px',\n      minWidth: '80px',\n    },\n    closeButton: {\n      color: '#D0A9FF',\n    },\n  }),\n)\n\nexport default useStyles\n","import useStyles from './style'\nimport React from 'react'\nimport { Backdrop, Button, DialogActions, Fade, Grid, Modal, PropTypes, Typography } from '@material-ui/core'\nimport { KeyboardArrowDown, KeyboardArrowLeft, KeyboardArrowRight, KeyboardArrowUp } from '@material-ui/icons'\nimport { setAboutOpen } from '../../reducer'\n\ntype PropTypes = {\n  languageIsEn: boolean\n  aboutIsOpen: boolean\n  dispatch: any\n  playSound: (sound: () => void) => void\n  modalSound: () => void\n}\n\nconst About: React.FC<PropTypes> = ({ languageIsEn, aboutIsOpen, dispatch, playSound, modalSound }): JSX.Element => {\n  const classes = useStyles()\n\n  const handleAboutToggle = () => {\n    playSound(modalSound)\n    dispatch(setAboutOpen(!aboutIsOpen))\n  }\n\n  return (\n    <div>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleAboutToggle}>\n        {languageIsEn ? 'About' : 'Об игре'}\n      </Button>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={aboutIsOpen}\n        onClose={handleAboutToggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={aboutIsOpen}>\n          <div className={classes.paper}>\n            <Typography paragraph variant=\"h4\" component=\"div\">\n              {languageIsEn ? 'About' : 'Об игре'}\n            </Typography>\n            <Typography paragraph variant=\"body1\" component=\"div\">\n              {languageIsEn ? 'Join the numbers and get to the 2048 tile!' : 'Соединяйте вместе одинаковые числа и дойдите до 2048!'}\n            </Typography>\n            <Typography paragraph variant=\"body1\" component=\"div\">\n              {languageIsEn\n                ? 'Use your arrow keys to move the tiles. When two tiles with the same number touch, they merge into one.'\n                : 'Используйте Ваши стрелки на клавиатуре, чтобы перемещать плитки. Когда 2 плитки с одинаковым числом соприкосаются, они сливаются в одну.'}\n            </Typography>\n            <Typography paragraph variant=\"body1\" component=\"div\">\n              {languageIsEn ? 'Get to the 2048 tile, and reach a high score!' : 'Соберите плитку с числом 2048 и установите рекорд!'}\n            </Typography>\n            <Typography paragraph variant=\"h5\" component=\"div\">\n              {languageIsEn ? 'Hotkeys' : 'Горячие клавиши'}\n            </Typography>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <Grid item className={classes.hotkey}>\n                  <KeyboardArrowDown />\n                </Grid>\n                <Grid item className={classes.hotkey}>\n                  <Typography variant=\"h6\">S</Typography>\n                </Grid>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Move down' : 'Переместить вниз'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <KeyboardArrowUp />\n                </div>\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">W</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Move up' : 'Переместить вверх'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <KeyboardArrowRight />\n                </div>\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">D</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Move right' : 'Переместить вправо'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <KeyboardArrowLeft />\n                </div>\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">A</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Move left' : 'Переместить влево'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">N</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'New game' : 'Новая игра'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">G</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Score' : 'Результаты'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">T</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Settings' : 'Настройки'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">P</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Pause' : 'Пауза'}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.gridElement}>\n              <Grid item container xs={3} justify=\"center\">\n                <div className={classes.hotkey}>\n                  <Typography variant=\"h6\">F</Typography>\n                </div>\n              </Grid>\n              <Grid item container xs={9} alignItems=\"center\">\n                <Typography variant=\"h6\">{languageIsEn ? 'Fullscreen mode' : 'Полноэкранный режим'}</Typography>\n              </Grid>\n            </Grid>\n            <DialogActions>\n              <Button className={classes.closeButton} onClick={handleAboutToggle} color=\"primary\">\n                Close\n              </Button>\n            </DialogActions>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n\nexport default About\n","import { createStyles, makeStyles, Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundImage: 'linear-gradient(-20deg, #2b5876 0%, #4e4376 100%)',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      borderRadius: '15px',\n      color: '#FFF',\n      outline: 'none',\n    },\n    gridElement: {\n      margin: '10px 0',\n    },\n    hotkey: {\n      border: '1px solid grey',\n      borderRadius: '10px',\n      width: '35px',\n      height: '35px',\n      boxShadow: '2px 2px #FFF',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginRight: '10px',\n    },\n    button: {\n      borderRadius: '15px',\n      padding: '5px 10px',\n      minWidth: '80px',\n    },\n    closeButton: {\n      color: '#D0A9FF',\n    },\n    table: {\n      minWidth: 450,\n    },\n  }),\n)\n\nexport default useStyles\n","import useStyles from './style'\nimport React from 'react'\nimport {\n  Backdrop,\n  Button,\n  Fade,\n  Modal,\n  TableContainer,\n  Typography,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  DialogActions,\n} from '@material-ui/core'\nimport { ScoreDataType, StateType } from '../../types/types'\nimport { setScoreOpen } from '../../reducer'\n\ntype PropTypes = {\n  languageIsEn: boolean\n  state: StateType\n  dispatch: any\n  playSound: (sound: () => void) => void\n  modalSound: () => void\n}\n\nconst Score: React.FC<PropTypes> = ({ languageIsEn, state, dispatch, playSound, modalSound }): JSX.Element => {\n  const classes = useStyles()\n\n  const handleScoreToggle = () => {\n    playSound(modalSound)\n    dispatch(setScoreOpen(!state.scoreIsOpen))\n  }\n\n  return (\n    <div>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleScoreToggle}>\n        {languageIsEn ? 'Score' : 'Результаты'}\n      </Button>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={state.scoreIsOpen}\n        onClose={handleScoreToggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={state.scoreIsOpen}>\n          <div className={classes.paper}>\n            <Typography paragraph variant=\"h4\" component=\"div\">\n              {state.languageIsEn ? 'Score' : 'Результаты'}\n            </Typography>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\">{state.languageIsEn ? '#' : '№'}</TableCell>\n                    <TableCell align=\"center\">{state.languageIsEn ? 'Score' : 'Очки'}</TableCell>\n                    <TableCell align=\"center\">{state.languageIsEn ? 'Time' : 'Время'}</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {state.scoreData.map((row: ScoreDataType, i: number) => (\n                    <TableRow key={i}>\n                      <TableCell align=\"center\">{i + 1}</TableCell>\n                      <TableCell align=\"center\">{row.scoreValue}</TableCell>\n                      <TableCell align=\"center\">{row.time}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n\n            <DialogActions>\n              <Button className={classes.closeButton} onClick={handleScoreToggle} color=\"primary\">\n                Close\n              </Button>\n            </DialogActions>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Score\n","import { createStyles, makeStyles, Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'space-between',\n      justifyContent: 'center',\n      backgroundImage: 'linear-gradient(-20deg, #2b5876 0%, #4e4376 100%)',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      borderRadius: '15px',\n      color: '#FFF',\n      outline: 'none',\n    },\n    button: {\n      borderRadius: '15px',\n      padding: '5px 10px',\n      minWidth: '100px',\n    },\n    closeButton: {\n      color: '#D0A9FF',\n    },\n    form: {\n      margin: '10px 0',\n    },\n    formLabel: {\n      color: '#FFF',\n    },\n    fullscreen: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n    fullscreenButton: {\n      border: 'none',\n      borderRadius: '15px',\n      background: 'rgba(255, 255, 255, 0.4)',\n    },\n    slider: {\n      color: '#FFF',\n    },\n  }),\n)\n\nexport default useStyles\n","import useStyles from './style'\nimport React from 'react'\nimport {\n  Backdrop,\n  Button,\n  DialogActions,\n  Fade,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Modal,\n  PropTypes,\n  Radio,\n  RadioGroup,\n  Slider,\n  Typography,\n} from '@material-ui/core'\nimport { StateType } from '../../types/types'\nimport { setFieldSize, setFullScreen, setLanguage, setMusic, setMusicValue, setSettingsOpen, setSound, setSoundValue } from '../../reducer'\nimport { Fullscreen, FullscreenExit, MusicNote, MusicOff, VolumeDown, VolumeUp } from '@material-ui/icons'\n\ntype PropTypes = {\n  resetGame: () => void\n  initField: () => void\n  state: StateType\n  dispatch: any\n  toggleFullScreen: () => void\n  bgSoundOn: () => void\n  stop: () => void\n  playSound: (sound: () => void) => void\n  modalSound: () => void\n}\n\nconst Settings: React.FC<PropTypes> = ({\n  resetGame,\n  state,\n  dispatch,\n  toggleFullScreen,\n  bgSoundOn,\n  stop,\n  playSound,\n  modalSound,\n}): JSX.Element => {\n  const classes = useStyles()\n\n  const handleChangeFieldSize = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setFieldSize(+target.value))\n    handleSettingsToggle()\n    resetGame()\n  }\n\n  const handleChangeLanguage = () => {\n    dispatch(setLanguage(!state.languageIsEn))\n  }\n\n  const handleSettingsToggle = () => {\n    playSound(modalSound)\n    dispatch(setSettingsOpen(!state.settingsIsOpen))\n  }\n\n  const handleFullscreenToggle = () => {\n    playSound(modalSound)\n    dispatch(setFullScreen(!state.fullScreenIsActive))\n    toggleFullScreen()\n  }\n\n  const onBgMusicOn = () => {\n    if (!state.isMusicOn) {\n      bgSoundOn()\n    }\n  }\n\n  const onBgMusicOff = () => {\n    if (state.isMusicOn) {\n      stop()\n    }\n  }\n\n  const handleSoundToggle = () => {\n    dispatch(setSound(!state.isSoundOn))\n  }\n\n  const handleMusicToggle = () => {\n    dispatch(setMusic(!state.isMusicOn))\n  }\n\n  const handleChangeSoundValue = (event: any, newValue: number | number[]) => {\n    dispatch(setSoundValue(newValue as number))\n  }\n\n  const handleChangeMusicValue = (event: any, newValue: number | number[]) => {\n    dispatch(setMusicValue(newValue as number))\n  }\n\n  return (\n    <div>\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleSettingsToggle}>\n        {state.languageIsEn ? 'Settings' : 'Настройки'}\n      </Button>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={state.settingsIsOpen}\n        onClose={handleSettingsToggle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={state.settingsIsOpen}>\n          <div className={classes.paper}>\n            <Typography paragraph variant=\"h4\" component=\"div\">\n              {state.languageIsEn ? 'Settings' : 'Настройки'}\n            </Typography>\n            <FormControl className={classes.form} component=\"fieldset\">\n              <FormLabel className={classes.formLabel} component=\"legend\">\n                {state.languageIsEn ? 'Field size:' : 'Размер поля:'}\n              </FormLabel>\n              <RadioGroup aria-label=\"gender\" name=\"gender1\" value={state.fieldSize} onChange={handleChangeFieldSize} row>\n                <FormControlLabel value={4} control={<Radio />} label=\"4 x 4\" />\n                <FormControlLabel value={5} control={<Radio />} label=\"5 x 5\" />\n                <FormControlLabel value={6} control={<Radio />} label=\"6 x 6\" />\n              </RadioGroup>\n            </FormControl>\n            <FormControl className={classes.form} component=\"fieldset\">\n              <FormLabel className={classes.formLabel} component=\"legend\">\n                {state.languageIsEn ? 'Language:' : 'Язык:'}\n              </FormLabel>\n              <RadioGroup\n                // className={classes.radioGroup}\n                aria-label=\"gender\"\n                name=\"gender1\"\n                value={state.languageIsEn}\n                onChange={handleChangeLanguage}\n                row\n              >\n                <FormControlLabel value={true} control={<Radio />} label={state.languageIsEn ? 'English:' : 'Английский:'} />\n                <FormControlLabel value={false} control={<Radio />} label={state.languageIsEn ? 'Russian:' : 'Русский:'} />\n              </RadioGroup>\n            </FormControl>\n            <div className={classes.fullscreen}>\n              <Typography paragraph variant=\"body1\" component=\"div\">\n                {state.languageIsEn ? 'Fullscreen Mode: ' : 'Полноэкранный режим: '}\n              </Typography>\n\n              <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleFullscreenToggle}>\n                {state.fullScreenIsActive ? <FullscreenExit /> : <Fullscreen />}\n              </Button>\n            </div>\n            <FormControl className={classes.form} component=\"fieldset\">\n              <FormLabel className={classes.formLabel} component=\"legend\">\n                {state.languageIsEn ? 'Sound:' : 'Звук:'}\n              </FormLabel>\n              <RadioGroup aria-label=\"gender\" name=\"gender1\" value={state.isSoundOn} onChange={handleSoundToggle} row>\n                <FormControlLabel value={true} control={<Radio />} label={state.languageIsEn ? 'On:' : 'Вкл:'} />\n                <FormControlLabel value={false} control={<Radio />} label={state.languageIsEn ? 'Off:' : 'Выкл:'} />\n              </RadioGroup>\n            </FormControl>\n            <Grid container spacing={2}>\n              <Grid item>\n                <VolumeDown />\n              </Grid>\n              <Grid item xs>\n                <Slider\n                  className={classes.slider}\n                  value={state.soundValue * 100}\n                  onChange={handleChangeSoundValue}\n                  aria-labelledby=\"continuous-slider\"\n                />\n              </Grid>\n              <Grid item>\n                <VolumeUp />\n              </Grid>\n            </Grid>\n            <FormControl className={classes.form} component=\"fieldset\">\n              <FormLabel className={classes.formLabel} component=\"legend\">\n                {state.languageIsEn ? 'Music:' : 'Музыка:'}\n              </FormLabel>\n              <RadioGroup aria-label=\"gender\" name=\"gender1\" value={state.isMusicOn} onChange={handleMusicToggle} row>\n                <FormControlLabel value={true} onClick={onBgMusicOn} control={<Radio />} label={state.languageIsEn ? 'On:' : 'Вкл:'} />\n                <FormControlLabel value={false} onClick={onBgMusicOff} control={<Radio />} label={state.languageIsEn ? 'Off:' : 'Выкл:'} />\n              </RadioGroup>\n            </FormControl>\n            <Grid container spacing={2}>\n              <Grid item>\n                <MusicOff />\n              </Grid>\n              <Grid item xs>\n                <Slider\n                  className={classes.slider}\n                  value={state.musicValue * 100}\n                  onChange={handleChangeMusicValue}\n                  aria-labelledby=\"continuous-slider\"\n                />\n              </Grid>\n              <Grid item>\n                <MusicNote />\n              </Grid>\n            </Grid>\n            <DialogActions>\n              <Button className={classes.closeButton} onClick={handleSettingsToggle} color=\"primary\">\n                Close\n              </Button>\n            </DialogActions>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Settings\n","import { createStyles, makeStyles, Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      borderRadius: '15px',\n      padding: '5px 10px',\n      minWidth: '80px',\n    },\n  }),\n)\n\nexport default useStyles\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport './style.scss'\nimport { StateType } from '../../types/types'\nimport { setResetGame } from '../../reducer'\nimport About from '../About/About'\nimport Score from '../Score/Score'\nimport Settings from '../Settings/Settings'\nimport useStyles from './style'\n\ntype PropTypes = {\n  onSetPause: () => void\n  resetGame: () => void\n  initField: () => void\n  state: StateType\n  dispatch: any\n  toggleFullScreen: () => void\n  bgSoundOn: () => void\n  stop: () => void\n  playSound: (sound: () => void) => void\n  modalSound: () => void\n}\n\nconst GameMenu: React.FC<PropTypes> = ({\n  onSetPause,\n  resetGame,\n  initField,\n  state,\n  dispatch,\n  toggleFullScreen,\n  bgSoundOn,\n  stop,\n  playSound,\n  modalSound,\n}): JSX.Element => {\n  const classes = useStyles()\n\n  const onResetGame = () => {\n    dispatch(setResetGame(true))\n    resetGame()\n  }\n\n  return (\n    <div className=\"menu-wrapper\">\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={onResetGame}>\n        {state.languageIsEn ? 'New game' : 'Новая игра'}\n      </Button>\n      <About\n        languageIsEn={state.languageIsEn}\n        aboutIsOpen={state.aboutIsOpen}\n        dispatch={dispatch}\n        playSound={playSound}\n        modalSound={modalSound}\n      />\n      <Score languageIsEn={state.languageIsEn} state={state} dispatch={dispatch} playSound={playSound} modalSound={modalSound} />\n      <Settings\n        resetGame={resetGame}\n        initField={initField}\n        state={state}\n        dispatch={dispatch}\n        toggleFullScreen={toggleFullScreen}\n        bgSoundOn={bgSoundOn}\n        stop={stop}\n        playSound={playSound}\n        modalSound={modalSound}\n      />\n      <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={onSetPause}>\n        {state.languageIsEn ? 'Pause' : 'Пауза'}\n      </Button>\n    </div>\n  )\n}\n\nexport default GameMenu\n","import React from 'react'\nimport './style.scss'\nimport { StateType } from '../../types/types'\n\ntype PropTypes = {\n  state: StateType\n}\n\nconst GameStats: React.FC<PropTypes> = ({ state }): JSX.Element => {\n  return (\n    <div className=\"stats-wrapper\">\n      <div className=\"stats__cell\">\n        {state.languageIsEn ? 'Score: ' : 'Счет: '}\n        {state.scoreValue}\n      </div>\n      <div className=\"stats__cell\">\n        {state.languageIsEn ? 'Global: ' : 'Общий: '}\n        {state.globalScoreValue}\n      </div>\n      <div className=\"stats__cell\">\n        {state.languageIsEn ? 'Max: ' : 'Макс. : '}\n        {state.maxValue}\n      </div>\n      <div className=\"stats__cell\">\n        {state.languageIsEn ? 'Time: ' : 'Время: '}\n        {`${state.nowTime.getMinutes()} : ${state.nowTime.getSeconds()}`}\n      </div>\n    </div>\n  )\n}\n\nexport default GameStats\n","import React from 'react'\nimport './style.scss'\n\ntype PropTypes = {\n  value: number | null\n}\n\nconst FieldCell: React.FC<PropTypes> = ({ value }): JSX.Element => {\n  return (\n    <div className={value ? `cell-wrapper cell__active cell--${value}` : 'cell-wrapper'}>\n      <span className=\"cell__number\">{value}</span>\n    </div>\n  )\n}\n\nexport default FieldCell\n","import React from 'react'\nimport FieldCell from '../FieldCell/FieldCell'\nimport './style.scss'\nimport { StateType } from '../../types/types'\n\ntype PropTypes = {\n  cellsValue: (number | null)[][]\n  state: StateType\n}\n\nconst GameField: React.FC<PropTypes> = ({ cellsValue, state }): JSX.Element => {\n  const fieldCells = cellsValue.map((cellRow, rowI) => {\n    return (\n      <div key={rowI} className=\"field__row\">\n        {cellRow.map((cell, cellI) => (\n          <FieldCell key={cellI} value={cell} />\n        ))}\n      </div>\n    )\n  })\n  return (\n    <div className=\"field-wrapper\">\n      {fieldCells}\n      <div className={!state.isPause ? 'pause-wrapper' : 'pause-wrapper pause-wrapper--active'}>\n        {state.languageIsEn ? 'Pause On:' : 'Пауза'}\n      </div>\n    </div>\n  )\n}\n\nexport default GameField\n","import { GameDataType } from '../types/types'\n\nexport const getCopyOfArray = (oldArray: GameDataType): GameDataType => {\n  return JSON.parse(JSON.stringify(oldArray))\n}\n","import { setGameWin, setScoreData } from '../reducer'\n\nconst checkGameIsWin = (\n  value: number,\n  dispatch: any,\n  gameIsContinue: boolean,\n  playSound: (sound: () => void) => void,\n  winSound: () => void,\n): void => {\n  if (value === 2048 && !gameIsContinue) {\n    playSound(winSound)\n    dispatch(setGameWin(true))\n    dispatch(setScoreData(value))\n  }\n}\n\nexport default checkGameIsWin\n","import { setGlobalScore, setMaxValue, setScore } from '../reducer'\nimport checkGameIsWin from './checkGameIsWin'\n\nconst updateScoreValues = (\n  value: number,\n  globalScoreValue: number,\n  maxValue: number,\n  dispatch: any,\n  gameIsContinue: boolean,\n  playSound: (sound: () => void) => void,\n  winSound: () => void,\n) => {\n  dispatch(setScore(value))\n  dispatch(setGlobalScore(value))\n  if (value > maxValue) dispatch(setMaxValue(value))\n  checkGameIsWin(value, dispatch, gameIsContinue, playSound, winSound)\n}\n\nexport default updateScoreValues\n","import { GameDataType } from '../types/types'\nimport { getCopyOfArray } from '../helpers/getCopyOfArray'\nimport updateScoreValues from '../helpers/updateScoreValues'\n\nconst swipeLeft = (\n  copyData: GameDataType,\n  fieldSize: number,\n  globalScoreValue: number,\n  maxValue: number,\n  dispatch: any,\n  gameIsContinue: boolean,\n  playSound: (sound: () => void) => void,\n  winSound: () => void,\n): GameDataType => {\n  const newData = getCopyOfArray(copyData)\n\n  for (let i = 0; i < fieldSize; i += 1) {\n    const row = newData[i]\n    let prevIndex = 0\n    let currentIndex = 1\n\n    while (prevIndex < fieldSize) {\n      if (currentIndex === fieldSize) {\n        currentIndex = prevIndex + 1\n        prevIndex += 1\n        continue\n      }\n      if (row[prevIndex] === 0 && row[currentIndex] === 0) {\n        currentIndex += 1\n      } else if (row[prevIndex] === 0 && row[currentIndex] !== 0) {\n        row[prevIndex] = row[currentIndex]\n        row[currentIndex] = 0\n        currentIndex += 1\n      } else if (row[prevIndex] !== 0 && row[currentIndex] === 0) {\n        currentIndex += 1\n      } else if (row[prevIndex] !== 0 && row[currentIndex] !== 0) {\n        if (row[prevIndex] === row[currentIndex]) {\n          row[prevIndex] = row[prevIndex] + row[currentIndex]\n          updateScoreValues(row[prevIndex], globalScoreValue, maxValue, dispatch, gameIsContinue, playSound, winSound)\n          row[currentIndex] = 0\n          currentIndex = prevIndex + 1\n          prevIndex += 1\n        } else {\n          prevIndex += 1\n          currentIndex = prevIndex + 1\n        }\n      }\n    }\n  }\n\n  return newData\n}\n\nexport default swipeLeft\n","import { GameDataType } from '../types/types'\nimport { getCopyOfArray } from '../helpers/getCopyOfArray'\nimport updateScoreValues from '../helpers/updateScoreValues'\n\nconst swipeRight = (\n  copyData: GameDataType,\n  fieldSize: number,\n  globalScoreValue: number,\n  maxValue: number,\n  dispatch: any,\n  gameIsContinue: boolean,\n  playSound: (sound: () => void) => void,\n  winSound: () => void,\n): GameDataType => {\n  const newData = getCopyOfArray(copyData)\n\n  for (let i = fieldSize - 1; i >= 0; i -= 1) {\n    const row = newData[i]\n    let prevIndex = row.length - 1\n    let currentIndex = prevIndex - 1\n\n    while (prevIndex > 0) {\n      if (currentIndex === -1) {\n        currentIndex = prevIndex - 1\n        prevIndex -= 1\n        continue\n      }\n      if (row[prevIndex] === 0 && row[currentIndex] === 0) {\n        currentIndex -= 1\n      } else if (row[prevIndex] === 0 && row[currentIndex] !== 0) {\n        row[prevIndex] = row[currentIndex]\n        row[currentIndex] = 0\n        currentIndex -= 1\n      } else if (row[prevIndex] !== 0 && row[currentIndex] === 0) {\n        currentIndex -= 1\n      } else if (row[prevIndex] !== 0 && row[currentIndex] !== 0) {\n        if (row[prevIndex] === row[currentIndex]) {\n          row[prevIndex] = row[prevIndex] + row[currentIndex]\n          updateScoreValues(row[prevIndex], globalScoreValue, maxValue, dispatch, gameIsContinue, playSound, winSound)\n          row[currentIndex] = 0\n          currentIndex = prevIndex - 1\n          prevIndex -= 1\n        } else {\n          prevIndex -= 1\n          currentIndex = prevIndex - 1\n        }\n      }\n    }\n  }\n\n  return newData\n}\n\nexport default swipeRight\n","import { GameDataType } from '../types/types'\nimport { getCopyOfArray } from '../helpers/getCopyOfArray'\nimport updateScoreValues from '../helpers/updateScoreValues'\n\nconst swipeUp = (\n  copyData: GameDataType,\n  fieldSize: number,\n  globalScoreValue: number,\n  maxValue: number,\n  dispatch: any,\n  gameIsContinue: boolean,\n  playSound: (sound: () => void) => void,\n  winSound: () => void,\n): GameDataType => {\n  const newData = getCopyOfArray(copyData)\n\n  for (let i = 0; i < fieldSize; i += 1) {\n    let prevIndex = 0\n    let currentIndex = 1\n\n    while (prevIndex < fieldSize) {\n      if (currentIndex === fieldSize) {\n        currentIndex = prevIndex + 1\n        prevIndex += 1\n        continue\n      }\n      if (newData[prevIndex][i] === 0 && newData[currentIndex][i] === 0) {\n        currentIndex += 1\n      } else if (newData[prevIndex][i] === 0 && newData[currentIndex][i] !== 0) {\n        newData[prevIndex][i] = newData[currentIndex][i]\n        newData[currentIndex][i] = 0\n        currentIndex += 1\n      } else if (newData[prevIndex][i] !== 0 && newData[currentIndex][i] === 0) {\n        currentIndex += 1\n      } else if (newData[prevIndex][i] !== 0 && newData[currentIndex][i] !== 0) {\n        if (newData[prevIndex][i] === newData[currentIndex][i]) {\n          newData[prevIndex][i] = newData[prevIndex][i] + newData[currentIndex][i]\n          updateScoreValues(newData[prevIndex][i], globalScoreValue, maxValue, dispatch, gameIsContinue, playSound, winSound)\n          newData[currentIndex][i] = 0\n          currentIndex = prevIndex + 1\n          prevIndex += 1\n        } else {\n          prevIndex += 1\n          currentIndex = prevIndex + 1\n        }\n      }\n    }\n  }\n\n  return newData\n}\n\nexport default swipeUp\n","import { GameDataType } from '../types/types'\nimport { getCopyOfArray } from '../helpers/getCopyOfArray'\nimport updateScoreValues from '../helpers/updateScoreValues'\n\nconst swipeDown = (\n  copyData: GameDataType,\n  fieldSize: number,\n  globalScoreValue: number,\n  maxValue: number,\n  dispatch: any,\n  gameIsContinue: boolean,\n  playSound: (sound: () => void) => void,\n  winSound: () => void,\n): GameDataType => {\n  const newData = getCopyOfArray(copyData)\n\n  for (let i = fieldSize - 1; i >= 0; i -= 1) {\n    let prevIndex = newData.length - 1\n    let currentIndex = prevIndex - 1\n\n    while (prevIndex > 0) {\n      if (currentIndex === -1) {\n        currentIndex = prevIndex - 1\n        prevIndex -= 1\n        continue\n      }\n      if (newData[prevIndex][i] === 0 && newData[currentIndex][i] === 0) {\n        currentIndex -= 1\n      } else if (newData[prevIndex][i] === 0 && newData[currentIndex][i] !== 0) {\n        newData[prevIndex][i] = newData[currentIndex][i]\n        newData[currentIndex][i] = 0\n        currentIndex -= 1\n      } else if (newData[prevIndex][i] !== 0 && newData[currentIndex][i] === 0) {\n        currentIndex -= 1\n      } else if (newData[prevIndex][i] !== 0 && newData[currentIndex][i] !== 0) {\n        if (newData[prevIndex][i] === newData[currentIndex][i]) {\n          newData[prevIndex][i] = newData[prevIndex][i] + newData[currentIndex][i]\n          updateScoreValues(newData[prevIndex][i], globalScoreValue, maxValue, dispatch, gameIsContinue, playSound, winSound)\n          newData[currentIndex][i] = 0\n          currentIndex = prevIndex - 1\n          prevIndex -= 1\n        } else {\n          prevIndex -= 1\n          currentIndex = prevIndex - 1\n        }\n      }\n    }\n  }\n\n  return newData\n}\n\nexport default swipeDown\n","export const INITIAL_MOVES = 2\n\nexport const KEYS = {\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  ARROW_DOWN: 'ArrowDown',\n  ARROW_UP: 'ArrowUp',\n  KEY_W: 'KeyW',\n  KEY_A: 'KeyA',\n  KEY_S: 'KeyS',\n  KEY_D: 'KeyD',\n  KEY_N: 'KeyN',\n  KEY_G: 'KeyG',\n  KEY_T: 'KeyT',\n  KEY_P: 'KeyP',\n  KEY_F: 'KeyF',\n}\n","import { GameDataType } from '../types/types'\n\nexport const isIdenticalArrays = (array1: GameDataType, array2: GameDataType): boolean => {\n  return JSON.stringify(array1) === JSON.stringify(array2) ? true : false\n}\n","import { createStyles, makeStyles, Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '50px',\n      backgroundImage: 'linear-gradient(-20deg, #2b5876 0%, #4e4376 100%)',\n      boxShadow: theme.shadows[5],\n      borderRadius: '15px',\n      color: '#FFF',\n      outline: 'none',\n    },\n    button: {\n      margin: '10px 10px',\n      width: '200px',\n      height: '60px',\n      fontSize: '20px',\n      borderRadius: '15px',\n    },\n  }),\n)\n\nexport default useStyles\n","import useStyles from './style'\nimport React from 'react'\nimport { Backdrop, Button, Fade, Modal, PropTypes, Typography } from '@material-ui/core'\nimport { setGameContinue, setGameWin, setResetGame } from '../../reducer'\nimport { StateType } from '../../types/types'\n\ntype PropTypes = {\n  resetGame: () => void\n  state: StateType\n  dispatch: any\n}\n\nconst Win: React.FC<PropTypes> = ({ resetGame, state, dispatch }): JSX.Element => {\n  const classes = useStyles()\n\n  const onResetGame = () => {\n    dispatch(setGameWin(false))\n    dispatch(setResetGame(true))\n    resetGame()\n  }\n\n  const onContinueGame = () => {\n    dispatch(setGameWin(false))\n    dispatch(setGameContinue(true))\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={state.gameIsWin}\n        onClose={onResetGame}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={state.gameIsWin}>\n          <div className={classes.paper}>\n            <Typography paragraph variant=\"h3\" component=\"div\">\n              {state.languageIsEn ? 'You Win!' : 'Вы выиграли!'}\n            </Typography>\n            <Typography paragraph variant=\"h4\" component=\"div\">\n              {state.languageIsEn ? `Your Score: ${state.scoreValue}` : `Ваш счет: ${state.scoreValue}`}\n            </Typography>\n            <Typography paragraph variant=\"h5\" component=\"div\">\n              {state.languageIsEn ? `Your maximum tile value: ${state.maxValue}` : `Максимальное собранное значение: ${state.maxValue}`}\n            </Typography>\n            <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={onResetGame}>\n              {state.languageIsEn ? 'Try again' : 'Попробовать снова'}\n            </Button>\n            <Typography paragraph variant=\"body1\" component=\"div\">\n              {state.languageIsEn\n                ? `Even though you won, you can continue to enjoy the game, good luck!`\n                : `Несмотря на то, что вы выиграли, вы можете и дальше наслаждаться игрой. Удачи!`}\n            </Typography>\n            <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={onContinueGame}>\n              {state.languageIsEn ? 'Continue' : 'Продолжить'}\n            </Button>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Win\n","import { createStyles, makeStyles, Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '50px',\n      backgroundImage: 'linear-gradient(-20deg, #2b5876 0%, #4e4376 100%)',\n      boxShadow: theme.shadows[5],\n      borderRadius: '15px',\n      color: '#FFF',\n      outline: 'none',\n    },\n    button: {\n      marginTop: '20px',\n      width: '200px',\n      height: '60px',\n      fontSize: '20px',\n      borderRadius: '15px',\n    },\n  }),\n)\n\nexport default useStyles\n","import useStyles from './style'\nimport React from 'react'\nimport { Backdrop, Button, Fade, Modal, PropTypes, Typography } from '@material-ui/core'\nimport { setGameOver, setResetGame } from '../../reducer'\nimport { StateType } from '../../types/types'\n\ntype PropTypes = {\n  resetGame: () => void\n  state: StateType\n  dispatch: any\n}\n\nconst Lose: React.FC<PropTypes> = ({ resetGame, state, dispatch }): JSX.Element => {\n  const classes = useStyles()\n\n  const onResetGame = () => {\n    dispatch(setGameOver(false))\n    dispatch(setResetGame(true))\n    resetGame()\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={state.gameIsOver}\n        onClose={onResetGame}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={state.gameIsOver}>\n          <div className={classes.paper}>\n            <Typography paragraph variant=\"h3\" component=\"div\">\n              {state.languageIsEn ? 'You Lose!' : 'Вы проиграли!'}\n            </Typography>\n            <Typography paragraph variant=\"h4\" component=\"div\">\n              {state.languageIsEn ? `Your Score: ${state.scoreValue}` : `Ваш счет: ${state.scoreValue}`}\n            </Typography>\n            <Typography paragraph variant=\"h5\" component=\"div\">\n              {state.languageIsEn ? `Your maximum tile value: ${state.maxValue}` : `Максимальное собранное значение: ${state.maxValue}`}\n            </Typography>\n            <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={onResetGame}>\n              {state.languageIsEn ? 'Try again' : 'Попробовать снова'}\n            </Button>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Lose\n","export default __webpack_public_path__ + \"static/media/bg.e262ad59.mp3\";","export default __webpack_public_path__ + \"static/media/bump.4fbe93ea.mp3\";","export default __webpack_public_path__ + \"static/media/win.2c1d0d37.mp3\";","export default __webpack_public_path__ + \"static/media/lose.9ca31506.mp3\";","export default __webpack_public_path__ + \"static/media/open.f2a116ee.ogg\";","import _ from 'lodash'\n\nconst directions = ['swipeDown', 'swipeLeft', 'swipeRight', 'swipeUp']\n\nexport const getRandomDirection = (): string | undefined => {\n  return _.sample<string>(directions)\n}\n","import React, { useEffect, useReducer } from 'react'\nimport GameMenu from '../GameMenu/GameMenu'\nimport GameStats from '../GameStats/GameStats'\nimport GameField from '../GameField/GameField'\nimport './style.scss'\nimport { GameDataType } from '../../types/types'\nimport _ from 'lodash'\nimport swipeLeft from '../../utils/swipeLeft'\nimport swipeRight from '../../utils/swipeRight'\nimport swipeUp from '../../utils/swipeUp'\nimport swipeDown from '../../utils/swipeDown'\nimport { INITIAL_MOVES, KEYS } from '../../constants'\nimport reducer, {\n  initialState,\n  setFetchData,\n  setGameContinue,\n  setGameData,\n  setGameOver,\n  setInitTime,\n  setMaxValue,\n  setMusic,\n  setNowTime,\n  setPause,\n  setPauseDelay,\n  setResetGame,\n  setScore,\n  setScoreData,\n  setScoreOpen,\n  setSettingsOpen,\n  setSound,\n  setStartGame,\n  setStartPauseDelay,\n} from '../../reducer'\nimport { getRandomFieldValue } from '../../helpers/getRandomFieldValue'\nimport { getInitialData } from '../../helpers/getInitialData'\nimport { isIdenticalArrays } from '../../helpers/isIdenticalArrays'\nimport Win from '../Win/Win'\nimport Lose from '../Lose/Lose'\n// @ts-ignore\nimport bgSoundSrc from '../../assets/sounds/bg.mp3'\n// @ts-ignore\nimport bumpSoundSrc from '../../assets/sounds/bump.mp3'\n// @ts-ignore\nimport winSoundSrc from '../../assets/sounds/win.mp3'\n// @ts-ignore\nimport loseSoundSrc from '../../assets/sounds/lose.mp3'\n// @ts-ignore\nimport openModalSoundSrc from '../../assets/sounds/open.ogg'\nimport useSound from 'use-sound'\nimport { getRandomDirection } from '../../helpers/getRandomDirection'\n\nconst Game = (): JSX.Element => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const [bgSoundOn, { stop }] = useSound(bgSoundSrc, { volume: state.musicValue })\n  const [bumpSound] = useSound(bumpSoundSrc, { volume: state.soundValue })\n  const [winSound] = useSound(winSoundSrc, { volume: state.soundValue })\n  const [loseSound] = useSound(loseSoundSrc, { volume: state.soundValue })\n  const [modalSound] = useSound(openModalSoundSrc, { volume: state.soundValue })\n\n  const addRandomValue = (newData: GameDataType) => {\n    console.log(getRandomDirection())\n    if (state.isPause) onSetPause()\n    let isAdded = false\n\n    while (!isAdded) {\n      const getRandomRow = _.random(state.fieldSize - 1)\n      const getRandomColumn = _.random(state.fieldSize - 1)\n\n      if (newData[getRandomRow][getRandomColumn] === 0) {\n        newData[getRandomRow][getRandomColumn] = getRandomFieldValue()\n        isAdded = true\n      }\n\n      if (state.gameIsStart && !checkGameIsOver(newData)) {\n        playEventSound(loseSound)\n        dispatch(setScoreData(state.scoreValue))\n        dispatch(setGameOver(true))\n        return\n      }\n    }\n  }\n\n  const initField = () => {\n    const initialData = getInitialData(state.fieldSize)\n\n    for (let i = 0; i < INITIAL_MOVES; i += 1) {\n      addRandomValue(initialData)\n    }\n\n    if (state.gameIsStart) {\n      dispatch(setResetGame(false))\n      resetGame()\n    }\n\n    playBgSound()\n\n    dispatch(setStartGame(true))\n    dispatch(setGameData(initialData))\n  }\n\n  const resetGame = () => {\n    stop()\n    localStorage.removeItem('state')\n    dispatch(setPauseDelay(0))\n    dispatch(setInitTime(new Date()))\n    dispatch(setNowTime(new Date(new Date().getTime() - new Date().getTime())))\n    dispatch(setMaxValue(0))\n    dispatch(setScore(0))\n    dispatch(setMaxValue(0))\n    dispatch(setGameContinue(false))\n    dispatch(setSound(true))\n    dispatch(setMusic(true))\n  }\n\n  useEffect(() => {\n    if (localStorage.state) {\n      const fetchData = JSON.parse(localStorage.state)\n      dispatch(setFetchData(fetchData))\n    } else {\n      initField()\n    }\n  }, [state.fieldSize, state.gameIsReset])\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', setLocalStorage)\n    return () => window.removeEventListener('beforeunload', setLocalStorage)\n  })\n\n  useEffect(() => {\n    window.addEventListener('load', playBgSound)\n    return () => window.removeEventListener('load', playBgSound)\n  })\n\n  useEffect(() => {\n    const updateTimeInterval = setInterval(() => setTimer(), 1000)\n    return () => clearInterval(updateTimeInterval)\n  }, [state.isPause, state.pauseDelay, state.startPauseDelay, resetGame])\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown)\n    return () => window.removeEventListener('keydown', handleKeydown)\n  })\n\n  const moveLeft = () => {\n    playEventSound(bumpSound)\n    const newData = swipeLeft(\n      state.gameData,\n      state.fieldSize,\n      state.globalScoreValue,\n      state.maxValue,\n      dispatch,\n      state.gameIsContinue,\n      playEventSound,\n      winSound,\n    )\n    if (!isIdenticalArrays(state.gameData, newData)) {\n      addRandomValue(newData)\n    }\n    dispatch(setGameData(newData))\n  }\n\n  const moveRight = () => {\n    playEventSound(bumpSound)\n    const newData = swipeRight(\n      state.gameData,\n      state.fieldSize,\n      state.globalScoreValue,\n      state.maxValue,\n      dispatch,\n      state.gameIsContinue,\n      playEventSound,\n      winSound,\n    )\n    if (!isIdenticalArrays(state.gameData, newData)) {\n      addRandomValue(newData)\n    }\n    dispatch(setGameData(newData))\n  }\n\n  const moveUp = () => {\n    playEventSound(bumpSound)\n    const newData = swipeUp(\n      state.gameData,\n      state.fieldSize,\n      state.globalScoreValue,\n      state.maxValue,\n      dispatch,\n      state.gameIsContinue,\n      playEventSound,\n      winSound,\n    )\n    if (!isIdenticalArrays(state.gameData, newData)) {\n      addRandomValue(newData)\n    }\n    dispatch(setGameData(newData))\n  }\n  const moveDown = () => {\n    playEventSound(bumpSound)\n    const newData = swipeDown(\n      state.gameData,\n      state.fieldSize,\n      state.globalScoreValue,\n      state.maxValue,\n      dispatch,\n      state.gameIsContinue,\n      playEventSound,\n      winSound,\n    )\n    if (!isIdenticalArrays(state.gameData, newData)) {\n      addRandomValue(newData)\n    }\n    dispatch(setGameData(newData))\n  }\n  const handleKeydown = (e: KeyboardEvent) => {\n    switch (e.code) {\n      case KEYS.LEFT:\n      case KEYS.KEY_A:\n        moveLeft()\n        break\n      case KEYS.RIGHT:\n      case KEYS.KEY_D:\n        moveRight()\n        break\n      case KEYS.ARROW_UP:\n      case KEYS.KEY_W:\n        moveUp()\n        break\n      case KEYS.ARROW_DOWN:\n      case KEYS.KEY_S:\n        moveDown()\n        break\n      case KEYS.KEY_N:\n        resetGame()\n        dispatch(setResetGame(true))\n        break\n      case KEYS.KEY_G:\n        dispatch(setScoreOpen(!state.scoreIsOpen))\n        break\n      case KEYS.KEY_T:\n        dispatch(setSettingsOpen(!state.settingsIsOpen))\n        break\n      case KEYS.KEY_P:\n        onSetPause()\n        break\n      case KEYS.KEY_F:\n        toggleFullScreen()\n        break\n      default:\n        break\n    }\n  }\n  const onSetPause = () => {\n    if (!state.isPause) {\n      dispatch(setStartPauseDelay(new Date()))\n      dispatch(setPause(!state.isPause))\n    } else {\n      const pause = new Date().getTime() - state.startPauseDelay!.getTime()\n      dispatch(setPauseDelay(state.pauseDelay + pause))\n      dispatch(setPause(!state.isPause))\n    }\n  }\n\n  const checkGameIsOver = (newData: GameDataType): boolean => {\n    if (newData.flat().every(cell => cell !== 0)) {\n      for (let i = 0; i < state.fieldSize; i += 1) {\n        for (let j = 0; j < state.fieldSize - 1; j += 1) {\n          if (newData[i][j] === newData[i][j + 1]) {\n            return true\n          } else if (newData[j][i] === newData[j + 1][i]) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n    return true\n  }\n\n  const setTimer = () => {\n    if (!state.isPause) {\n      const diffTime = new Date().getTime() - state.initTime.getTime() - state.pauseDelay\n      dispatch(setNowTime(new Date(diffTime)))\n    }\n  }\n\n  const setLocalStorage = () => {\n    const fetchData = { ...state }\n    localStorage.setItem('state', JSON.stringify(fetchData))\n  }\n\n  const toggleFullScreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen()\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen()\n      }\n    }\n  }\n\n  const playBgSound = () => {\n    if (state.isMusicOn) {\n      stop()\n      setTimeout(() => {\n        bgSoundOn()\n      }, 100)\n    }\n  }\n\n  const playEventSound = (soundPlay: () => void) => {\n    if (state.isSoundOn) {\n      soundPlay()\n    }\n  }\n\n  return (\n    <div className=\"game-wrapper\">\n      <GameMenu\n        onSetPause={onSetPause}\n        resetGame={resetGame}\n        initField={initField}\n        state={state}\n        dispatch={dispatch}\n        toggleFullScreen={toggleFullScreen}\n        bgSoundOn={bgSoundOn}\n        stop={stop}\n        playSound={playEventSound}\n        modalSound={modalSound}\n      />\n      <GameField cellsValue={state.gameData} state={state} />\n      <GameStats state={state} />\n      <Lose resetGame={resetGame} state={state} dispatch={dispatch} />\n      <Win resetGame={resetGame} state={state} dispatch={dispatch} />\n    </div>\n  )\n}\n\nexport default Game\n","import _ from 'lodash'\n\nexport const getRandomFieldValue = (): number => {\n  return _.random(1, true) > 0.3 ? 2 : 4\n}\n","import { GameDataType } from '../types/types'\n\nexport const getInitialData = (fieldSize: number): GameDataType => {\n  return Array(fieldSize)\n    .fill(null)\n    .map(() => Array(fieldSize).fill(0))\n}\n","import React from 'react'\nimport './style.scss'\n\nconst Footer = (): JSX.Element => {\n  return (\n    <div className=\"footer-wrapper\">\n      <div className=\"footer-school\">\n        <a href=\"https://rs.school/\" target=\"_blank\" rel=\"noreferrer\">\n          RSS\n        </a>\n      </div>\n      <div className=\"footer-author\">\n        <a href=\"https://github.com/onc157\" target=\"_blank\" rel=\"noreferrer\">\n          onc157\n        </a>\n      </div>\n      <div className=\"footer-year\">2021</div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.scss'\nimport Header from './components/Header/Header'\nimport Game from './components/Game/Game'\nimport Footer from './components/Footer/Footer'\n\nfunction App(): JSX.Element {\n  return (\n    <>\n      <Header />\n      <Game />\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}